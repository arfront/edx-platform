# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python36:
      PYTHON_VERSION: '3.6'
  maxParallel: 3

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
    architecture: 'x64'

- task: PythonScript@0
  displayName: 'Export project path'
  inputs:
    scriptSource: 'inline'
    script: |
      """Search all subdirectories for `manage.py`."""
      from glob import iglob
      from os import path
      # Python >= 3.5
      manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
      if not manage_py:
          raise SystemExit('Could not find a Django project')
      project_location = path.dirname(path.abspath(manage_py))
      print('Found Django project in', project_location)
      print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))

- task: DownloadGitHubRelease@0
  inputs:
    connection: 'jekeans'
    userRepository: 'arfront/tutor'
    defaultVersionType: 'latest'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: CmdLine@2
  inputs:
    script: |
      export LC_ALL=C.UTF-8
      export LANG=C.UTF-8
      pip3 install -e .
    workingDirectory: '$(System.ArtifactsDirectory)'

- task: DockerInstaller@0
  inputs:
    dockerVersion: '17.09.0-ce'

- task: Docker@2
  inputs:
    containerRegistry: 'docker-arfront'
    command: 'login'

- task: CmdLine@2
  inputs:
    script: 'tutor config save --set ANDROID_OAUTH2_SECRET=$(ANDROID_OAUTH2_SECRET) --set ID=$(ID) --set MYSQL_ROOT_PASSWORD=$(MYSQL_ROOT_PASSWORD) --set OPENEDX_MYSQL_PASSWORD=$(OPENEDX_MYSQL_PASSWORD) --set OPENEDX_SECRET_KEY=$(OPENEDX_SECRET_KEY) --set DOCKER_IMAGE_OPENEDX=arfront/kh-academy:latest'
    workingDirectory: '$(System.ArtifactsDirectory)'

- task: CmdLine@2
  inputs:
    script: 'tutor images build openedx --build-arg EDX_PLATFORM_REPOSITORY=https://github.com/arfront/edx-platform.git --build-arg EDX_PLATFORM_VERSION=ironwood-master'

- task: CmdLine@2
  inputs:
    script: 'docker tag arfront/kh-academy:latest arfront/kh-academy:$(Build.BuildId)'

- task: CmdLine@2
  inputs:
    script: 'tutor images push arfront/openedx'

